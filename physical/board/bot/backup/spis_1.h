//*****************************************************************************
//*****************************************************************************
//  FILENAME: SPIS_1.h
//  Version: 2.70, Updated on 2013/5/19 at 10:44:36
//  Generated by PSoC Designer 5.4.2946
//
//  DESCRIPTION: SPIS User Module C Language interface file.
//-----------------------------------------------------------------------------
//      Copyright (c) Cypress Semiconductor 2013. All Rights Reserved.
//*****************************************************************************
//*****************************************************************************
#ifndef SPIS_1_INCLUDE
#define SPIS_1_INCLUDE

#include <m8c.h>

#pragma fastcall16  SPIS_1_EnableInt
#pragma fastcall16  SPIS_1_DisableInt
#pragma fastcall16  SPIS_1_Start
#pragma fastcall16  SPIS_1_Stop
#pragma fastcall16  SPIS_1_SetupTxData
#pragma fastcall16  SPIS_1_bReadRxData
#pragma fastcall16  SPIS_1_bReadStatus
#pragma fastcall16  SPIS_1_DisableSS
#pragma fastcall16  SPIS_1_EnableSS


//-------------------------------------------------
// Prototypes of the SPIS_1 API.
//-------------------------------------------------
extern void  SPIS_1_EnableInt(void);
extern void  SPIS_1_DisableInt(void);
extern void  SPIS_1_Start(BYTE bConfiguration);
extern void  SPIS_1_Stop(void);
extern void  SPIS_1_SetupTxData(BYTE bTxData);
extern BYTE  SPIS_1_bReadRxData(void);
extern BYTE  SPIS_1_bReadStatus(void);
extern void  SPIS_1_DisableSS(void);
extern void  SPIS_1_EnableSS(void);


//------------------------------------------------------
// Old function prototypes.  Will be removed in future
// release.  Do not use.
//------------------------------------------------------
#pragma fastcall16 bSPIS_1_ReadRxData
#pragma fastcall16 bSPIS_1_ReadStatus
#pragma fastcall16 SPIS_1_ClearSS
#pragma fastcall16 SPIS_1_SetSS

extern BYTE bSPIS_1_ReadRxData(void);   // Deprecated, see SPIS_1_bReadRxData
extern BYTE bSPIS_1_ReadStatus(void);   // Deprecated, see SPIS_1_bReadStatus
extern void  SPIS_1_SetSS(void);        // Deprecated, see SPIS_1_DisableSS
extern void  SPIS_1_ClearSS(void);      // Deprecated, see SPIS_1_EnableSS


//-------------------------------------------------
// Defines for SPIS_1 API's.
//-------------------------------------------------
#define SPIS_1_INT_REG_ADDR                    ( 0x0e1 )
#define SPIS_1_bINT_MASK                       ( 0x04 )

//-------------------------------
// SPI Configuration definitions
//-------------------------------
#define  SPIS_1_SPIS_MODE_0              0x00      // MODE 0 - Leading edge latches data - pos clock
#define  SPIS_1_SPIS_MODE_1              0x02      // MODE 1 - Leading edge latches data - neg clock
#define  SPIS_1_SPIS_MODE_2              0x04      // MODE 2 - Trailing edge latches data - pos clock
#define  SPIS_1_SPIS_MODE_3              0x06      // MODE 3 - Trailing edge latches data - neg clock
#define  SPIS_1_SPIS_LSB_FIRST           0x80      // LSB bit transmitted/received first
#define  SPIS_1_SPIS_MSB_FIRST           0x00      // MSB bit transmitted/received first

//-------------------------------
// SPI Status register masks
//-------------------------------
#define  SPIS_1_SPIS_RX_OVERRUN_ERROR    0x40      // Overrun error in received data
#define  SPIS_1_SPIS_TX_BUFFER_EMPTY     0x10      // TX Buffer register is ready for next data byte
#define  SPIS_1_SPIS_RX_BUFFER_FULL      0x08      // RX Buffer register has received current data
#define  SPIS_1_SPIS_SPI_COMPLETE        0x20      // SPI Tx/Rx cycle has completed

//-------------------------------------------------
// Register Addresses for SPIS_1
//-------------------------------------------------
#pragma ioport  SPIS_1_CONTROL_REG: 0x02b                  //Control register
BYTE            SPIS_1_CONTROL_REG;
#pragma ioport  SPIS_1_SHIFT_REG:   0x028                  //TX Shift Register register
BYTE            SPIS_1_SHIFT_REG;
#pragma ioport  SPIS_1_TX_BUFFER_REG:   0x029              //TX Buffer Register
BYTE            SPIS_1_TX_BUFFER_REG;
#pragma ioport  SPIS_1_RX_BUFFER_REG:   0x02a              //RX Buffer Register
BYTE            SPIS_1_RX_BUFFER_REG;
#pragma ioport  SPIS_1_FUNCTION_REG:    0x128              //Function register
BYTE            SPIS_1_FUNCTION_REG;
#pragma ioport  SPIS_1_INPUT_REG:   0x129                  //Input register
BYTE            SPIS_1_INPUT_REG;
#pragma ioport  SPIS_1_OUTPUT_REG:  0x12a                  //Output register
BYTE            SPIS_1_OUTPUT_REG;

#endif
// end of file SPIS_1.h
